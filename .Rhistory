r.i.c.3<-lm(con~factor(nat)+gdp+ic+mc+gdp*ps,data = dta)
summary(r.i.c.3) # simple regression to get beta_u interaction of gdp and support
r.i.i.3<-lm(inc~factor(nat)+gdp+ic+mc+gdp*ps,data = dta)
summary(r.i.i.3) # simple regression to get beta_u interaction of gdp and support
r.i.c.1<-lm(con~factor(nat)+gdp+ic+mc*gdp*ps,data = dta)
summary(r.i.c.1) # simple regression to get beta_u triple interaction
r.i.i.1<-lm(inc~factor(nat)+gdp+ic+mc*gdp*ps,data = dta)
summary(r.i.i.1) # simple regression to get beta_u triple interaction
################################### results with clustered se ######################################################
full.inc=lm(inc~factor(nat)+gdp+ic+mc*gdp*ps,data = dta)
full.con=lm(con~factor(nat)+gdp+ic+mc*gdp*ps,data = dta)
cov.fi=cluster.vcov(full.inc,dta[,c(1)])
cov.fc=cluster.vcov(full.con,dta[,c(1)])
coeftest(full.inc,cov.fi)
coeftest(full.con,cov.fc)
################################### dynamic estimations ############################################################
# simple regression to get beta_u
b.con.1=c()
for(i in 4:56){
reg.con.1<-lm(con~factor(nat)+gdp,data = dta[dta$pit %in% (i-3):i,])
b.con.1[i-3]=reg.con.1$coefficients['gdp']
assign(paste('r.ds.c',i-3,sep = '.'),reg.con.1)
}
b.inc.1=c()
for(i in 4:56){
reg.inc.1<-lm(inc~factor(nat)+gdp,data = dta[dta$pit %in% (i-3):i,])
b.inc.1[i-3]=reg.inc.1$coefficients['gdp']
assign(paste('r.ds.i',i-3,sep = '.'),reg.inc.1)
}
plot(seq(as.Date("2007/12/31"), as.Date("2020/12/31"), by = "quarter"),b.con.1,type = 'b',ylab = 'beta_u',xlab = 'Year',ylim = c(0,1),col = 'blue')
lines(seq(as.Date("2007/12/31"), as.Date("2020/12/31"), by = "quarter"),b.inc.1,type = 'b',ylab = 'beta_u',xlab = 'Year',ylim = c(0,1),col = 'red')
title('Simple regression estimation of beta_u: income=red consum=blue')
# simple regression to get beta_u controlling for incidence and restrictions
b.con.2=c()
for(i in 4:56){
reg.con.2<-lm(con~factor(nat)+gdp+ic+mc,data = dta[dta$pit %in% (i-3):i,])
b.con.2[i-3]=reg.con.2$coefficients['gdp']
}
b.inc.2=c()
for(i in 4:56){
reg.inc.2<-lm(inc~factor(nat)+gdp+ic+mc,data = dta[dta$pit %in% (i-3):i,])
b.inc.2[i-3]=reg.inc.2$coefficients['gdp']
}
plot(seq(as.Date("2007/12/31"), as.Date("2020/12/31"), by = "quarter"),b.con.2,type = 'b',ylab = 'beta_u',xlab = 'Year',ylim = c(0,1),col = 'blue')
lines(seq(as.Date("2007/12/31"), as.Date("2020/12/31"), by = "quarter"),b.inc.2,type = 'b',ylab = 'beta_u',xlab = 'Year',ylim = c(0,1),col = 'red')
title('Regression estimation of beta_u controlling for incidence and restrictions: income=red consum=blue')
# simple regression to get beta_u controlling for incidence and measures
b.con.3=c()
for(i in 4:56){
reg.con.3<-lm(con~factor(nat)+gdp+ic+mc+ps,data = dta[dta$pit %in% (i-3):i,])
b.con.3[i-3]=reg.con.3$coefficients['gdp']
}
b.inc.3=c()
for(i in 4:56){
reg.inc.3<-lm(inc~factor(nat)+gdp+ic+mc+ps,data = dta[dta$pit %in% (i-3):i,])
b.inc.3[i-3]=reg.inc.3$coefficients['gdp']
}
plot(seq(as.Date("2007/12/31"), as.Date("2020/12/31"), by = "quarter"),b.con.3,type = 'b',ylab = 'beta_u',xlab = 'Year',ylim = c(0,1),col = 'blue')
lines(seq(as.Date("2007/12/31"), as.Date("2020/12/31"), by = "quarter"),b.inc.3,type = 'b',ylab = 'beta_u',xlab = 'Year',ylim = c(0,1),col = 'red')
title('Regression estimation of beta_u controlling for incidence and measures: income=red consum=blue')
# simple regression to get beta_u interaction of gdp and restrictions
b.con.4=c()
for(i in 4:56){
reg.con.4<-lm(con~factor(nat)+gdp*mc+ic+ps,data = dta[dta$pit %in% (i-3):i,])
b.con.4[i-3]=reg.con.4$coefficients['gdp']
}
b.inc.4=c()
for(i in 4:56){
reg.inc.4<-lm(inc~factor(nat)+gdp*mc+ic+ps,data = dta[dta$pit %in% (i-3):i,])
b.inc.4[i-3]=reg.inc.4$coefficients['gdp']
}
plot(seq(as.Date("2007/12/31"), as.Date("2020/12/31"), by = "quarter"),b.con.4,type = 'b',ylab = 'beta_u',xlab = 'Year',ylim = c(0,1),col = 'blue')
lines(seq(as.Date("2007/12/31"), as.Date("2020/12/31"), by = "quarter"),b.inc.4,type = 'b',ylab = 'beta_u',xlab = 'Year',ylim = c(0,1),col = 'red')
title('Regression estimation of beta_u controlling for interaction gdp and restrictions (b_u shown at mc=0) : income=red consum=blue')
# simple regression to get beta_u interaction of gdp and support
b.con.5=c()
for(i in 4:56){
reg.con.5<-lm(con~factor(nat)+gdp*ps+ic+mc,data = dta[dta$pit %in% (i-3):i,])
b.con.5[i-3]=reg.con.5$coefficients['gdp']
}
b.inc.5=c()
for(i in 4:56){
reg.inc.5<-lm(inc~factor(nat)+gdp*ps+ic+mc,data = dta[dta$pit %in% (i-3):i,])
b.inc.5[i-3]=reg.inc.5$coefficients['gdp']
}
plot(seq(as.Date("2007/12/31"), as.Date("2020/12/31"), by = "quarter"),b.con.5,type = 'b',ylab = 'beta_u',xlab = 'Year',ylim = c(0,1),col = 'blue')
lines(seq(as.Date("2007/12/31"), as.Date("2020/12/31"), by = "quarter"),b.inc.5,type = 'b',ylab = 'beta_u',xlab = 'Year',ylim = c(0,1),col = 'red')
title('Regression estimation of beta_u controlling for interaction gdp and support (b_u shown at ps=0) : income=red consum=blue')
# simple regression to get beta_u triple interaction
b.con.6=c()
for(i in 4:56){
reg.con.6<-lm(con~factor(nat)+gdp*ps*mc+ic,data = dta[dta$pit %in% (i-3):i,])
b.con.6[i-3]=reg.con.6$coefficients['gdp']
assign(paste('r.di.c',i-3,sep = '.'),reg.con.6)
}
b.inc.6=c()
for(i in 4:56){
reg.inc.6<-lm(inc~factor(nat)+gdp*ps*mc+ic,data = dta[dta$pit %in% (i-3):i,])
b.inc.6[i-3]=reg.inc.6$coefficients['gdp']
assign(paste('r.di.i',i-3,sep = '.'),reg.inc.6)
}
plot(seq(as.Date("2007/12/31"), as.Date("2020/12/31"), by = "quarter"),b.con.6,type = 'b',ylab = 'beta_u',xlab = 'Year',ylim = c(0,1),col = 'blue')
lines(seq(as.Date("2007/12/31"), as.Date("2020/12/31"), by = "quarter"),b.inc.6,type = 'b',ylab = 'beta_u',xlab = 'Year',ylim = c(0,1),col = 'red')
title('Regression estimation of beta_u controlling for interaction gdp and measures (b_u shown at measures=0) : income=red consum=blue')
# res.g+c(rep(0,length(res.g)-4),mean(cov.q1)/4,mean(c(cov.q1,cov.q2))/2,mean(c(cov.q1,cov.q2,cov.q3))*0.75,mean(c(cov.q1,cov.q2,cov.q3,cov.q4)))*res.gm # use to get b_u for measures at their mean
############################## estimators for 2020 ################################################################
summary(reg.con.6)
summary(reg.inc.6)
summary(reg.con.5)
summary(reg.inc.5)
summary(reg.con.4)
summary(reg.inc.4)
############################## impact of single countries on estimates    #########################################
inf.con<-lm.influence(reg.con.6)$coefficients
inf.inc<-lm.influence(reg.inc.6)$coefficients
sort(abs(inf.con[,'gdp']),decreasing = TRUE)
sort(abs(inf.inc[,'gdp']),decreasing = TRUE)
############################### look on savings channel ###########################################################
# dynamic point of view
B=matrix(nrow = 52,ncol = 5)
B.s=B
for (t in 1:52) {
s=t-1 # s+1 = starting point in time
f=t+4 # l-1 = end point in time
# use pit.to.q to translate point in time to actual dates
# pit.to.q=data.frame('pit'=1:56,'qtr'=seq(as.Date("2006/4/1"), as.Date("2020/12/31"), by = "quarter"))
b=c()
b_f<-lm((gdp-gni)~factor(nat)+ic+gdp*mc*ps,data = dta[dta$pit>s & dta$pit<f,])
b[1]=b_f$coefficients['gdp']
b_d<-lm((gni-nni)~factor(nat)+ic+gdp*mc*ps,data = dta[dta$pit>s & dta$pit<f,])
b[2]=b_d$coefficients['gdp']
b_t<-lm((nni-inc)~factor(nat)+ic+gdp*mc*ps,data = dta[dta$pit>s & dta$pit<f,])
b[3]=b_t$coefficients['gdp']
b_s<-lm((inc-con)~factor(nat)+ic+gdp*mc*ps,data = dta[dta$pit>s & dta$pit<f,])
b[4]=b_s$coefficients['gdp']
b_u<-lm(con~factor(nat)+ic+gdp*mc*ps,data = dta[dta$pit>s & dta$pit<f,])
b[5]=b_u$coefficients['gdp']
B[t,]=b
b.s=c()
b.s_f<-lm((gdp-gni)~factor(nat)+gdp,data = dta[dta$pit>s & dta$pit<f,])
b.s[1]=b.s_f$coefficients['gdp']
b.s_d<-lm((gni-nni)~factor(nat)+gdp,data = dta[dta$pit>s & dta$pit<f,])
b.s[2]=b.s_d$coefficients['gdp']
b.s_t<-lm((nni-inc)~factor(nat)+gdp,data = dta[dta$pit>s & dta$pit<f,])
b.s[3]=b.s_t$coefficients['gdp']
b.s_s<-lm((inc-con)~factor(nat)+gdp,data = dta[dta$pit>s & dta$pit<f,])
b.s[4]=b.s_s$coefficients['gdp']
b.s_u<-lm(con~factor(nat)+gdp,data = dta[dta$pit>s & dta$pit<f,])
b.s[5]=b.s_u$coefficients['gdp']
B.s[t,]=b.s
}
b.labs=c('b_f','b_d','b_t','b_s','b_u')
B=data.frame(B)
colnames(B)=b.labs
plot(B) # interesting???
b.labs=c('b_f','b_d','b_t','b_s','b_u')
B.s=data.frame(B.s)
colnames(B.s)=b.labs
plot(B.s) # interesting???
plot(seq(as.Date("2008/1/1"), as.Date("2020/12/31"), by = "quarter"),B$b_f,type = 'l',ylab = 'beta',xlab = 'Year',ylim = c(-0.5,1),col = 'blue')
lines(seq(as.Date("2008/1/1"), as.Date("2020/12/31"), by = "quarter"),B$b_d,type = 'l',ylab = 'beta',xlab = 'Year',ylim = c(-0.5,1),col = 'black')
lines(seq(as.Date("2008/1/1"), as.Date("2020/12/31"), by = "quarter"),B$b_t,type = 'l',ylab = 'beta',xlab = 'Year',ylim = c(-0.5,1),col = 'orange')
lines(seq(as.Date("2008/1/1"), as.Date("2020/12/31"), by = "quarter"),B$b_s,type = 'l',ylab = 'beta',xlab = 'Year',ylim = c(-0.5,1),col = 'green')
lines(seq(as.Date("2008/1/1"), as.Date("2020/12/31"), by = "quarter"),B$b_u,type = 'l',ylab = 'beta',xlab = 'Year',ylim = c(-0.5,1),col = 'red')
title('Channel contributions over time (triple interaction estimation, measures at zero)')
legend(x = c(as.Date("2008/1/1"), as.Date("2009/1/1")), y = c(0.725, 1),legend = c('b_f','b_d','b_t','b_s', 'b_u'),col = c('blue','black','orange','green','red'),lty = c(1,1))
abline(v=as.Date("2009/10/01"))
abline(v=as.Date("2020/04/01"))
plot(seq(as.Date("2008/1/1"), as.Date("2020/12/31"), by = "quarter"),B.s$b_f,type = 'l',ylab = 'beta',xlab = 'Year',ylim = c(-0.5,1),col = 'blue')
lines(seq(as.Date("2008/1/1"), as.Date("2020/12/31"), by = "quarter"),B.s$b_d,type = 'l',ylab = 'beta',xlab = 'Year',ylim = c(-0.5,1),col = 'black')
lines(seq(as.Date("2008/1/1"), as.Date("2020/12/31"), by = "quarter"),B.s$b_t,type = 'l',ylab = 'beta',xlab = 'Year',ylim = c(-0.5,1),col = 'orange')
lines(seq(as.Date("2008/1/1"), as.Date("2020/12/31"), by = "quarter"),B.s$b_s,type = 'l',ylab = 'beta',xlab = 'Year',ylim = c(-0.5,1),col = 'green')
lines(seq(as.Date("2008/1/1"), as.Date("2020/12/31"), by = "quarter"),B.s$b_u,type = 'l',ylab = 'beta',xlab = 'Year',ylim = c(-0.5,1),col = 'red')
title('Channel contributions over time (simple estimation, no covid controll vars)')
legend(x = c(as.Date("2008/1/1"), as.Date("2009/1/1")), y = c(0.725, 1),legend = c('b_f','b_d','b_t','b_s', 'b_u'),col = c('blue','black','orange','green','red'),lty = c(1,1))
abline(v=as.Date("2009/10/01"))
abline(v=as.Date("2020/04/01"))
# static point of view
s=0 # s+1 = starting point in time
f=57 # l-1 = end point in time
# use pit.to.q to translate point in time to actual dates
# pit.to.q=data.frame('pit'=1:52,'qtr'=seq(as.Date("2006/4/1"), as.Date("2020/12/31"), by = "quarter"))
b=c()
b_f<-lm((gdp-gni)~factor(nat)+ic+gdp*mc*ps,data = dta[dta$pit>s & dta$pit<f,])
summary(b_f)
b[1]=b_f$coefficients['gdp']
b_d<-lm((gni-nni)~factor(nat)+ic+gdp*mc*ps,data = dta[dta$pit>s & dta$pit<f,])
summary(b_d)
b[2]=b_d$coefficients['gdp']
b_t<-lm((nni-inc)~factor(nat)+ic+gdp*mc*ps,data = dta[dta$pit>s & dta$pit<f,])
summary(b_t)
b[3]=b_t$coefficients['gdp']
b_s<-lm((inc-con)~factor(nat)+ic+gdp*mc*ps,data = dta[dta$pit>s & dta$pit<f,])
summary(b_s)
b[4]=b_s$coefficients['gdp']
b_u<-lm(con~factor(nat)+ic+gdp*mc*ps,data = dta[dta$pit>s & dta$pit<f,])
summary(b_u)
b[5]=b_u$coefficients['gdp']
b
sum(b)
###################################################################################################################
############################## end of estimations #################################################################
###################################################################################################################
############################## sample selection vector to make sure tilde is right ################################
tmp.sel=1:22*(c('as','au','be','br','cd','cz','dn','fn','fr','ge','gr','it','jp','nl','nw','po','ru','sp','sw','tk','uk','us') %in% codes)
tmp.sel=tmp.sel[tmp.sel>0]
dta.l=dta
dta.l$lgdp=NA
dta.l$lcon=NA
for (i in codes) {
dta.l$lgdp[dta.l$nat==i][-(1:4)]=dta.l$gdp[dta.l$nat==i][-(56:59)]
dta.l$lcon[dta.l$nat==i][-(1:4)]=dta.l$con[dta.l$nat==i][-(56:59)]
}
dta.l=dta.l[dta.l$pit %in% 5:59,]
summary(lm(con~factor(nat)+gdp+lgdp,data = dta.l))
summary(lm(inc~factor(nat)+gdp+lgdp,data = dta.l))
################ test stationarity of quarterly data #################
for (i in codes) {
print(i)
print(Box.test(get(paste('con',i,sep = '_'))-mean(get(paste('con',i,sep = '_'))), 4, type="Box-Pierce"))
print(Box.test(get(paste('gdp',i,sep = '_'))-mean(get(paste('gdp',i,sep = '_'))), 4, type="Box-Pierce"))
print('')
print('')
}
############## test stationarity of yearly data ######################
for (i in codes) {
print(i)
print(Box.test(diff(get(paste('l.con',i,sep = '_')))-mean(diff(get(paste('l.con',i,sep = '_')))), 4, type="Box-Pierce"))
print(Box.test(diff(get(paste('l.gdp',i,sep = '_')))-mean(diff(get(paste('l.gdp',i,sep = '_')))), 4, type="Box-Pierce"))
print('')
print('')
}
source('C:/Users/BongBong/Desktop/nat_ac/pre_reg_wls_newic.R')
##########################################################################################
########################## get permanent component of gdp ################################
##########################################################################################
l.gdp_tot=rep(0,15)
for (i in codes) { # log gdp levels seasonal and calendar adjusted
assign(paste("l.gdp",i,sep="_"),to.year(get(i)[get(i)$Indicator==row_gdp & is.na(get(i)$`Reference year`)==0,][2,][7:66]))
l.gdp_tot=l.gdp_tot+get(paste("l.gdp",i,sep="_"))
assign(paste("l.gdp",i,sep="_"),as.ts(log(get(paste("l.gdp",i,sep="_")))))
assign(paste('ar',i,sep = '_'),arima(get(paste("l.gdp",i,sep="_")),order= c(1,1,0),include.mean = FALSE))
}
l.gdp_tot=as.ts(log(l.gdp_tot))
ar_tot=arima(l.gdp_tot,order = c(1,1,0),include.mean = FALSE  )
l.con_tot=rep(0,15)
for (i in codes) { # log con levels seasonal and calendar adjusted
assign(paste("l.con",i,sep="_"),to.year(get(i)[get(i)$Indicator==row_con & is.na(get(i)$`Reference year`)==0,][2,][7:66]))
l.con_tot=l.con_tot+get(paste("l.con",i,sep="_"))
assign(paste("l.con",i,sep="_"),as.ts(log(get(paste("l.con",i,sep="_")))))
}
l.con_tot=as.ts(log(l.con_tot))
for (i in c(codes,'tot')){
gdp=diff(get(paste("l.gdp",i,sep="_")))
GDP=diff(l.gdp_tot)
con=diff(get(paste("l.con",i,sep="_")))
CON=diff(get(paste("l.con",i,sep="_"))-l.con_tot)
assign(paste('X',i,sep = '_'),ts.intersect(gdp,GDP,CON))
}
for (i in c(codes,'tot')){
assign(paste('A',i,sep = '_'),Bcoef(VAR(get(paste('X',i,sep = '_')),type = 'none')))
assign(paste('a',i,sep = '_'),cbind(c(get(paste('ar',i,sep = '_'))$coef,0),c(0,ar_tot$coef)))
}
################## helper function to get E[...] #############################
E<-function(A,dx,r){
A=A/(1+r)
return(c(1,-1,0)%*%A%*%solve(diag(3)-A)%*%dx)
}
# E(A_au,X_au[5,],0.02) #try
################# actual calculation of perm gdp comp ########################
r=0.02
for (i in codes) {
helper=NaN*(1:14)
for (z in 1:14) {
helper[z]=get(paste('l.gdp',i,sep='_'))[z+1]-l.gdp_tot[z+1]+E(get(paste('A',i,sep = '_')),get(paste('X',i,sep = '_'))[z,],r)
}
assign(paste('gdp.p',i,sep='_'),diff(helper))
}
################ get data together in a data frame ###########################
t=length(get(paste('gdp.p',codes[1],sep='_')))
dta.p<-data.frame(pit=1:t,'nat'=rep(codes[1],t),'con'=diff(get(paste('l.con',codes[1],sep='_')))[-1]-diff(l.con_tot)[-1],'gdp.p'=get(paste('gdp.p',codes[1],sep='_')),'gdp'=diff(get(paste('l.gdp',codes[1],sep='_')))[-1]-diff(l.gdp_tot)[-1])
for (i in 2:obs) {
tmp=data.frame(pit=1:t,'nat'=rep(codes[i],t),'con'=diff(get(paste('l.con',codes[i],sep='_')))[-1]-diff(l.con_tot)[-1],'gdp.p'=get(paste('gdp.p',codes[i],sep='_')),'gdp'=diff(get(paste('l.gdp',codes[i],sep='_')))[-1]-diff(l.gdp_tot)[-1])
dta.p=rbind(dta.p,tmp)
}
dta.p$gdp.t=dta.p$gdp-dta.p$gdp.p
############### first regression #############################################
dta.p.s=dta.p[dta.p$pit>0,] # >0 full sample -- >54 covid -- <55 non-covid
perm<-lm(con~factor(nat)+gdp.p,data = dta.p.s)
tran<-lm(con~factor(nat)+gdp.t,data = dta.p.s)
norm<-lm(con~factor(nat)+gdp,data = dta.p.s)
stargazer(norm,perm,tran,type = 'text')
stargazer(coeftest(norm,vcovCL,cluster=dta.p.s$nat),coeftest(perm,vcovCL,cluster=dta.p.s$nat),coeftest(tran,vcovCL,cluster=dta.p.s$nat),type = 'text',omit = 'factor',omit.labels = 'Country fixed effects?')
############# developments over time #########################################
b.perm=c()
b.tran=c()
b.norm=c()
for(i in 2:13){
reg.norm<-lm(con~factor(nat)+gdp,data = dta.p[dta.p$pit %in% (i-1):i,])
b.norm[i-1]=reg.norm$coefficients['gdp']
reg.perm<-lm(con~factor(nat)+gdp.p,data = dta.p[dta.p$pit %in% (i-1):i,])
b.perm[i-1]=reg.perm$coefficients['gdp.p']
reg.tran<-lm(con~factor(nat)+gdp.t,data = dta.p[dta.p$pit %in% (i-1):i,])
b.tran[i-1]=reg.tran$coefficients['gdp.t']
}
plot(2009:2020,b.norm,type='b',col='red',ylim=c(-1,1),xlab='Year',ylab='beta')
lines(2009:2020,b.perm,type = 'b',col = 'blue')
lines(2009:2020,b.tran,type = 'b',col='yellow')
title('beta_u (red), beta_perm (blue) and beta_tran (yellow)')
source('C:/Users/BongBong/Desktop/nat_ac/pre_reg_wls_newic.R')
########################## define helping routine    #####################################
to.year<-function(vec){
n=length(vec)
stopifnot((n/4)%%1==0) # all quarters for each year have to be in the data
res=c()
for (t in 1:(n/4)) {
res[t]=sum(vec[(4*t-3):(4*t)])
}
return(res)
}
##########################################################################################
########################## get permanent component of gdp ################################
##########################################################################################
l.gdp_tot=rep(0,15)
for (i in codes) { # log gdp levels seasonal and calendar adjusted
assign(paste("l.gdp",i,sep="_"),to.year(get(i)[get(i)$Indicator==row_gdp & is.na(get(i)$`Reference year`)==0,][2,][7:66]))
l.gdp_tot=l.gdp_tot+get(paste("l.gdp",i,sep="_"))
assign(paste("l.gdp",i,sep="_"),as.ts(log(get(paste("l.gdp",i,sep="_")))))
assign(paste('ar',i,sep = '_'),arima(get(paste("l.gdp",i,sep="_")),order= c(1,1,0),include.mean = FALSE))
}
l.gdp_tot=as.ts(log(l.gdp_tot))
ar_tot=arima(l.gdp_tot,order = c(1,1,0),include.mean = FALSE  )
l.con_tot=rep(0,15)
for (i in codes) { # log con levels seasonal and calendar adjusted
assign(paste("l.con",i,sep="_"),to.year(get(i)[get(i)$Indicator==row_con & is.na(get(i)$`Reference year`)==0,][2,][7:66]))
l.con_tot=l.con_tot+get(paste("l.con",i,sep="_"))
assign(paste("l.con",i,sep="_"),as.ts(log(get(paste("l.con",i,sep="_")))))
}
l.con_tot=as.ts(log(l.con_tot))
for (i in c(codes,'tot')){
gdp=diff(get(paste("l.gdp",i,sep="_")))
GDP=diff(l.gdp_tot)
con=diff(get(paste("l.con",i,sep="_")))
CON=diff(get(paste("l.con",i,sep="_"))-l.con_tot)
assign(paste('X',i,sep = '_'),ts.intersect(gdp,GDP,CON))
}
for (i in c(codes,'tot')){
assign(paste('A',i,sep = '_'),Bcoef(VAR(get(paste('X',i,sep = '_')),type = 'none')))
assign(paste('a',i,sep = '_'),cbind(c(get(paste('ar',i,sep = '_'))$coef,0),c(0,ar_tot$coef)))
}
################## helper function to get E[...] #############################
E<-function(A,dx,r){
A=A/(1+r)
return(c(1,-1,0)%*%A%*%solve(diag(3)-A)%*%dx)
}
# E(A_au,X_au[5,],0.02) #try
################# actual calculation of perm gdp comp ########################
r=0.02
for (i in codes) {
helper=NaN*(1:14)
for (z in 1:14) {
helper[z]=get(paste('l.gdp',i,sep='_'))[z+1]-l.gdp_tot[z+1]+E(get(paste('A',i,sep = '_')),get(paste('X',i,sep = '_'))[z,],r)
}
assign(paste('gdp.p',i,sep='_'),diff(helper))
}
################ get data together in a data frame ###########################
t=length(get(paste('gdp.p',codes[1],sep='_')))
dta.p<-data.frame(pit=1:t,'nat'=rep(codes[1],t),'con'=diff(get(paste('l.con',codes[1],sep='_')))[-1]-diff(l.con_tot)[-1],'gdp.p'=get(paste('gdp.p',codes[1],sep='_')),'gdp'=diff(get(paste('l.gdp',codes[1],sep='_')))[-1]-diff(l.gdp_tot)[-1])
for (i in 2:obs) {
tmp=data.frame(pit=1:t,'nat'=rep(codes[i],t),'con'=diff(get(paste('l.con',codes[i],sep='_')))[-1]-diff(l.con_tot)[-1],'gdp.p'=get(paste('gdp.p',codes[i],sep='_')),'gdp'=diff(get(paste('l.gdp',codes[i],sep='_')))[-1]-diff(l.gdp_tot)[-1])
dta.p=rbind(dta.p,tmp)
}
dta.p$gdp.t=dta.p$gdp-dta.p$gdp.p
############### first regression #############################################
dta.p.s=dta.p[dta.p$pit>0,] # >0 full sample -- >54 covid -- <55 non-covid
perm<-lm(con~factor(nat)+gdp.p,data = dta.p.s)
tran<-lm(con~factor(nat)+gdp.t,data = dta.p.s)
norm<-lm(con~factor(nat)+gdp,data = dta.p.s)
stargazer(norm,perm,tran,type = 'text')
stargazer(coeftest(norm,vcovCL,cluster=dta.p.s$nat),coeftest(perm,vcovCL,cluster=dta.p.s$nat),coeftest(tran,vcovCL,cluster=dta.p.s$nat),type = 'text',omit = 'factor',omit.labels = 'Country fixed effects?')
############# developments over time #########################################
b.perm=c()
b.tran=c()
b.norm=c()
for(i in 2:13){
reg.norm<-lm(con~factor(nat)+gdp,data = dta.p[dta.p$pit %in% (i-1):i,])
b.norm[i-1]=reg.norm$coefficients['gdp']
reg.perm<-lm(con~factor(nat)+gdp.p,data = dta.p[dta.p$pit %in% (i-1):i,])
b.perm[i-1]=reg.perm$coefficients['gdp.p']
reg.tran<-lm(con~factor(nat)+gdp.t,data = dta.p[dta.p$pit %in% (i-1):i,])
b.tran[i-1]=reg.tran$coefficients['gdp.t']
}
plot(2009:2020,b.norm,type='b',col='red',ylim=c(-1,1),xlab='Year',ylab='beta')
lines(2009:2020,b.perm,type = 'b',col = 'blue')
lines(2009:2020,b.tran,type = 'b',col='yellow')
title('beta_u (red), beta_perm (blue) and beta_tran (yellow)')
for (i in codes) {
print(i)
print(Box.test(diff(get(paste('l.con',i,sep = '_')))-mean(diff(get(paste('l.con',i,sep = '_')))), 4, type="Box-Pierce"))
print(Box.test(diff(get(paste('l.gdp',i,sep = '_')))-mean(diff(get(paste('l.gdp',i,sep = '_')))), 4, type="Box-Pierce"))
print('')
print('')
}
source('C:\Users\BongBong\Desktop\nat_ac\permanent_comp_yearlevel')
source('C:/Users/BongBong/Desktop/nat_ac/permanent_comp_yearlevel')
source('C:/Users/BongBong/Desktop/nat_ac/permanent_comp_yearlevel.R')
source('C:/Users/BongBong/Desktop/nat_ac/pre_reg_wls_newic.R')
##########################################################################################
########################## get permanent component of gdp ################################
##########################################################################################
l.gdp_tot=rep(0,60)
for (i in codes) { # log gdp levels seasonal and calendar adjusted
assign(paste("l.gdp",i,sep="_"),get(i)[get(i)$Indicator==row_gdp & is.na(get(i)$`Reference year`)==0,][2,][7:66])
l.gdp_tot=l.gdp_tot+get(paste("l.gdp",i,sep="_"))
assign(paste("l.gdp",i,sep="_"),as.ts(log(t(get(paste("l.gdp",i,sep="_")))),frequency=4,start=c(2006,1),end=c(2020,4)))
assign(paste('ar',i,sep = '_'),arima(get(paste("l.gdp",i,sep="_")),order= c(1,1,0),include.mean = FALSE))
}
l.gdp_tot=as.ts(log(t(l.gdp_tot)),start=c(2006,1),end=c(2020,4))
ar_tot=arima(l.gdp_tot,order = c(1,1,0),include.mean = FALSE  )
l.con_tot=rep(0,60)
for (i in codes) { # log con levels seasonal and calendar adjusted
assign(paste("l.con",i,sep="_"),get(i)[get(i)$Indicator==row_con & is.na(get(i)$`Reference year`)==0,][2,][7:66])
l.con_tot=l.con_tot+get(paste("l.con",i,sep="_"))
assign(paste("l.con",i,sep="_"),as.ts(log(t(get(paste("l.con",i,sep="_")))),frequency=4,start=c(2006,1),end=c(2020,4)))
}
l.con_tot=as.ts(log(t(l.con_tot)),start=c(2006,1),end=c(2020,4))
for (i in c(codes,'tot')){
gdp=diff(get(paste("l.gdp",i,sep="_")))
GDP=diff(l.gdp_tot)
con=diff(get(paste("l.con",i,sep="_")))
CON=diff(get(paste("l.con",i,sep="_"))-l.con_tot)
assign(paste('X',i,sep = '_'),ts.intersect(gdp,GDP,CON))
}
for (i in c(codes,'tot')){
assign(paste('A',i,sep = '_'),Bcoef(VAR(get(paste('X',i,sep = '_')),type = 'none')))
assign(paste('a',i,sep = '_'),cbind(c(get(paste('ar',i,sep = '_'))$coef,0),c(0,ar_tot$coef)))
}
################## helper function to get E[...] #############################
E<-function(A,dx,r){
A=A/(1+r)
return(c(1,-1,0)%*%A%*%solve(diag(3)-A)%*%dx)
}
# E(A_au,X_au[5,],0.02) #try
################# actual calculation of perm gdp comp ########################
r=0.02
for (i in codes) {
helper=NaN*(1:59)
for (z in 1:59) {
helper[z]=get(paste('l.gdp',i,sep='_'))[z+1]-l.gdp_tot[z+1]+E(get(paste('A',i,sep = '_')),get(paste('X',i,sep = '_'))[z,],r)
}
assign(paste('gdp.p',i,sep='_'),diff(helper))
}
################ get data together in a data frame ###########################
t=length(get(paste('gdp.p',codes[1],sep='_')))
dta.p<-data.frame(pit=1:t,'nat'=rep(codes[1],t),'con'=diff(get(paste('l.con',codes[1],sep='_')))[-1]-diff(l.con_tot)[-1],'gdp.p'=get(paste('gdp.p',codes[1],sep='_')),'gdp'=diff(get(paste('l.gdp',codes[1],sep='_')))[-1]-diff(l.gdp_tot)[-1])
for (i in 2:obs) {
tmp=data.frame(pit=1:t,'nat'=rep(codes[i],t),'con'=diff(get(paste('l.con',codes[i],sep='_')))[-1]-diff(l.con_tot)[-1],'gdp.p'=get(paste('gdp.p',codes[i],sep='_')),'gdp'=diff(get(paste('l.gdp',codes[i],sep='_')))[-1]-diff(l.gdp_tot)[-1])
dta.p=rbind(dta.p,tmp)
}
dta.p$gdp.t=dta.p$gdp-dta.p$gdp.p
############### first regression #############################################
dta.p.s=dta.p[dta.p$pit>0,] # >0 full sample -- >54 covid -- <55 non-covid
perm<-lm(con~factor(nat)+gdp.p,data = dta.p.s)
tran<-lm(con~factor(nat)+gdp.t,data = dta.p.s)
norm<-lm(con~factor(nat)+gdp,data = dta.p.s)
stargazer(norm,perm,tran,type = 'text')
stargazer(coeftest(norm,vcovCL,cluster=dta.p.s$nat),coeftest(perm,vcovCL,cluster=dta.p.s$nat),coeftest(tran,vcovCL,cluster=dta.p.s$nat),type = 'text',omit = 'factor',omit.labels = 'Country fixed effects?')
############# developments over time #########################################
b.perm=c()
b.tran=c()
b.norm=c()
for(i in 4:58){
reg.norm<-lm(con~factor(nat)+gdp,data = dta.p[dta.p$pit %in% (i-3):i,])
b.norm[i-3]=reg.norm$coefficients['gdp']
reg.perm<-lm(con~factor(nat)+gdp.p,data = dta.p[dta.p$pit %in% (i-3):i,])
b.perm[i-3]=reg.perm$coefficients['gdp.p']
reg.tran<-lm(con~factor(nat)+gdp.t,data = dta.p[dta.p$pit %in% (i-3):i,])
b.tran[i-3]=reg.tran$coefficients['gdp.t']
}
plot(seq(as.Date("2007/4/1"), as.Date("2020/12/31"), by = "quarter"),b.norm,type='b',col='red',ylim=c(-1,1),xlab='Time',ylab='beta')
lines(seq(as.Date("2007/4/1"), as.Date("2020/12/31"), by = "quarter"),b.perm,type = 'b',col = 'blue')
lines(seq(as.Date("2007/4/1"), as.Date("2020/12/31"), by = "quarter"),b.tran,type = 'b',col='yellow')
title('beta_u (red), beta_perm (blue) and beta_tran (yellow)')
###############
# adding the control variables
###############
c.dta=dta[dta$pit!=1,]
c.dta$nat==dta.p$nat
dta.p.c=data.frame(dta.p,'mc'=c.dta$mc,'ps'=c.dta$ps,'ic'=c.dta$ic)
############## rerunning regressions with intersections #######################
# consumption
perm.c<-lm(con~factor(nat)+gdp.p*mc*ps+ic,data = dta.p.c)
tran.c<-lm(con~factor(nat)+gdp.t*mc*ps+ic,data = dta.p.c)
norm.c<-lm(con~factor(nat)+gdp*mc*ps+ic,data = dta.p.c)
stargazer(norm.c,perm.c,tran.c,type = 'text')
stargazer(coeftest(norm.c,vcovCL,cluster=dta.p.c$nat),coeftest(perm.c,vcovCL,cluster=dta.p.c$nat),coeftest(tran.c,vcovCL,cluster=dta.p.c$nat),type = 'text',omit = 'factor',omit.labels = 'Country fixed effects?')
# income
dta.p.c=data.frame(dta.p.c,'inc'=c.dta$inc)
perm.i<-lm(inc~factor(nat)+gdp.p*mc*ps+ic,data = dta.p.c)
tran.i<-lm(inc~factor(nat)+gdp.t*mc*ps+ic,data = dta.p.c)
norm.i<-lm(inc~factor(nat)+gdp*mc*ps+ic,data = dta.p.c)
stargazer(norm.i,perm.i,tran.i,type = 'text')
stargazer(coeftest(norm.i,vcovCL,cluster=dta.p.c$nat),coeftest(perm.i,vcovCL,cluster=dta.p.c$nat),coeftest(tran.i,vcovCL,cluster=dta.p.c$nat),type = 'text',omit = 'factor',omit.labels = 'Country fixed effects?')
# cluster additionally on year level
year<-function(vec,start=1,sq=1){
vec=vec+sq-1
return(vec/4-(vec%%4)/4+start)
}
# year(dta$pit,start=2006)
dta.p.c=data.frame(dta.p.c,'year'=year(dta.p.c$pit,start = 2006,sq=2))
stargazer(coeftest(norm.c,vcovCL,cluster=dta.p.c[,c('nat','year')]),coeftest(perm.c,vcovCL,cluster=dta.p.c[,c('nat','year')]),coeftest(tran.c,vcovCL,cluster=dta.p.c[,c('nat','year')]),type = 'text',omit = 'factor',omit.labels = 'Country fixed effects?')
stargazer(coeftest(norm.i,vcovCL,cluster=dta.p.c[,c('nat','year')]),coeftest(perm.i,vcovCL,cluster=dta.p.c[,c('nat','year')]),coeftest(tran.i,vcovCL,cluster=dta.p.c[,c('nat','year')]),type = 'text',omit = 'factor',omit.labels = 'Country fixed effects?')
